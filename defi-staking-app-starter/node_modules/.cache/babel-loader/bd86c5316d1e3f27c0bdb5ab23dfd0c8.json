{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\maitr\\\\Documents\\\\GitHub\\\\Blockchain_starter_app\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\maitr\\\\Documents\\\\GitHub\\\\Blockchain_starter_app\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\maitr\\\\Documents\\\\GitHub\\\\Blockchain_starter_app\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\maitr\\\\Documents\\\\GitHub\\\\Blockchain_starter_app\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\maitr\\\\Documents\\\\GitHub\\\\Blockchain_starter_app\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\maitr\\\\Documents\\\\GitHub\\\\Blockchain_starter_app\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\maitr\\\\Documents\\\\GitHub\\\\Blockchain_starter_app\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\maitr\\\\Documents\\\\GitHub\\\\Blockchain_starter_app\\\\defi-staking-app-starter\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar.js';\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    // this will run first\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }() //connect webapp to web3\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                //\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('No etherem browser detected! check Metamask ');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }() // to load blockchain data\n\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account, networkId, tetherData, tether, tetherBalance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context3.sent;\n                this.setState({\n                  account: account[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                //  console.log(networkId, 'Network ID');\n                //bring tether contract\n                tetherData = Tether.networks[networkId];\n\n                if (!tetherData) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                _context3.next = 12;\n                return web3.eth.Contract(Tether.abi, tetherData.address);\n\n              case 12:\n                tether = _context3.sent;\n                this.setState({\n                  tether: tether\n                });\n                tetherBalance = tether.methods.balanceOf(this.state.account).call();\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                });\n                _context3.next = 19;\n                break;\n\n              case 18:\n                window.alert('Error! Tether contract not deployed - no detected network!');\n\n              case 19:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0',\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      tethterBalance: '0',\n      rwdBAlance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/maitr/Documents/GitHub/Blockchain_starter_app/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","Navbar","Web3","Tether","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","account","setState","net","getId","networkId","tetherData","networks","Contract","abi","address","tether","tetherBalance","methods","balanceOf","state","call","toString","props","rwd","decentralBank","tethterBalance","rwdBAlance","stakingBalance","loading"],"mappings":";;;;;;;;AAAC,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;IAEMC,G;;;;;AACF;;;;;;;;uBAEU,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;QAEV;;;;;;;;;;qBAGOC,MAAM,CAACC,Q;;;;;AAEND,gBAAAA,MAAM,CAACE,IAAP,GAAa,IAAIP,IAAJ,CAASK,MAAM,CAACC,QAAhB,CAAb;;uBACMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;;;;;AACR;AACG,oBAAGH,MAAM,CAACE,IAAV,EACL;AACGF,kBAAAA,MAAM,CAACE,IAAP,GAAa,IAAIP,IAAJ,CAASK,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAb;AACF,iBAHI,MAKL;AACGJ,kBAAAA,MAAM,CAACK,KAAP,CAAa,8CAAb;AACF;;;;;;;;;;;;;;;QAEL;;;;;;;;;;;AAEUH,gBAAAA,I,GAAOF,MAAM,CAACE,I;;uBACEA,IAAI,CAACI,GAAL,CAASC,WAAT,E;;;AAAhBC,gBAAAA,O;AACN,qBAAKC,QAAL,CAAc;AAACD,kBAAAA,OAAO,EAAEA,OAAO,CAAC,CAAD;AAAjB,iBAAd;;uBACwBN,IAAI,CAACI,GAAL,CAASI,GAAT,CAAaC,KAAb,E;;;AAAlBC,gBAAAA,S;AACP;AAEA;AACMC,gBAAAA,U,GAAajB,MAAM,CAACkB,QAAP,CAAgBF,SAAhB,C;;qBAChBC,U;;;;;;uBAEsBX,IAAI,CAACI,GAAL,CAASS,QAAT,CAAkBnB,MAAM,CAACoB,GAAzB,EAA8BH,UAAU,CAACI,OAAzC,C;;;AAAfC,gBAAAA,M;AACN,qBAAKT,QAAL,CAAc;AAACS,kBAAAA,MAAM,EAANA;AAAD,iBAAd;AACIC,gBAAAA,a,GAAgBD,MAAM,CAACE,OAAP,CAAeC,SAAf,CAAyB,KAAKC,KAAL,CAAWd,OAApC,EAA6Ce,IAA7C,E;AACpB,qBAAKd,QAAL,CAAc;AAACU,kBAAAA,aAAa,EAAEA,aAAa,CAACK,QAAd;AAAhB,iBAAd;;;;;AAIAxB,gBAAAA,MAAM,CAACK,KAAP,CAAa,4DAAb;;;;;;;;;;;;;;;;;;AAKP,eAAYoB,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKH,KAAL,GAAa;AACTd,MAAAA,OAAO,EAAE,KADA;AAETU,MAAAA,MAAM,EAAE,EAFC;AAGTQ,MAAAA,GAAG,EAAE,EAHI;AAITC,MAAAA,aAAa,EAAE,EAJN;AAKTC,MAAAA,cAAc,EAAE,GALP;AAMTC,MAAAA,UAAU,EAAE,GANH;AAOTC,MAAAA,cAAc,EAAE,GAPP;AAQTC,MAAAA,OAAO,EAAE;AARA,KAAb;AAFe;AAYlB;;;;6BACO;AACL,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKT,KAAL,CAAWd,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADJ;AAMF;;;;EAnEaf,S;;AAsElB,eAAeI,GAAf","sourcesContent":[" import React, {Component} from 'react'\r\n import './App.css'\r\n import Navbar from './Navbar.js';\r\n import Web3 from 'web3';\r\n import Tether from '../truffle_abis/Tether.json'\r\n\r\n class App extends Component {\r\n     // this will run first\r\n     async UNSAFE_componentWillMount() {\r\n         await this.loadWeb3();\r\n         await this.loadBlockchainData();\r\n     }\r\n     //connect webapp to web3\r\n     async loadWeb3() {\r\n         // if we detect ethereum then enable it\r\n         if(window.ethereum) \r\n         {\r\n             window.web3 =new Web3(window.ethereum);\r\n             await window.ethereum.enable()\r\n         } //\r\n         else if(window.web3)\r\n         {\r\n            window.web3 =new Web3(window.web3.currentProvider);\r\n         } \r\n         else\r\n         {\r\n            window.alert('No etherem browser detected! check Metamask ')\r\n         }\r\n     }\r\n     // to load blockchain data\r\n     async loadBlockchainData() {\r\n         const web3 = window.web3;\r\n         const account = await web3.eth.getAccounts();\r\n         this.setState({account: account[0]})\r\n         const networkId = await web3.eth.net.getId()\r\n        //  console.log(networkId, 'Network ID');\r\n         \r\n        //bring tether contract\r\n        const tetherData = Tether.networks[networkId]\r\n        if(tetherData)\r\n        {\r\n            const tether = await web3.eth.Contract(Tether.abi, tetherData.address)\r\n            this.setState({tether})\r\n            let tetherBalance = tether.methods.balanceOf(this.state.account).call()\r\n            this.setState({tetherBalance: tetherBalance.toString()})\r\n        }\r\n        else\r\n        {\r\n            window.alert('Error! Tether contract not deployed - no detected network!')\r\n        }\r\n\r\n     }\r\n\r\n     constructor(props) {\r\n         super(props)\r\n         this.state = {\r\n             account: '0x0',\r\n             tether: {},\r\n             rwd: {},\r\n             decentralBank: {},\r\n             tethterBalance: '0',\r\n             rwdBAlance: '0',\r\n             stakingBalance: '0',\r\n             loading: true\r\n         }\r\n     }\r\n     render(){\r\n        return (\r\n            <div>\r\n            <Navbar account={this.state.account}/>\r\n            \r\n            </div> \r\n        )\r\n     }\r\n }\r\n\r\n export default App;"]},"metadata":{},"sourceType":"module"}